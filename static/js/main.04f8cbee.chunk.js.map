{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","sort","item1","item2","LENGTH","length","ALPHABET","localeCompare","NONE","reverse","console","log","App","useState","setSortType","setIsReversed","className","type","onClick","classNames","previsReversed","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAENC,EAAY,YAAOH,GAezB,OAbAG,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQL,GACN,KAAKJ,EAASU,OACZ,OAAOF,EAAMG,OAASF,EAAME,OAE9B,KAAKX,EAASY,SACZ,OAAOJ,EAAMK,cAAcJ,GAE7B,QACE,OAAOT,EAASc,SAIlBT,EACKC,EAAaS,WAItBC,QAAQC,IAAIb,EAAUC,GAEfC,I,SArCJN,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAMkB,EAAgB,WAC3B,MAAgCC,mBAASnB,EAASc,MAAlD,mBAAOV,EAAP,KAAiBgB,EAAjB,KACA,EAAoCD,oBAAS,GAA7C,mBAAOd,EAAP,KAAmBgB,EAAnB,KAmBA,OACE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLC,QAtBR,WACEJ,EAAYpB,EAASY,WAsBfU,UAAWG,IACT,iBACA,CACE,WAAYrB,IAAaJ,EAASY,WANxC,iCAaA,wBACEW,KAAK,SACLC,QA/BR,WACEJ,EAAYpB,EAASU,SA+BfY,UAAWG,IACT,oBACA,CACE,WAAYrB,IAAaJ,EAASU,SANxC,4BAaA,wBACEa,KAAK,SACLC,QAxCR,WACEH,GAAc,SAAAK,GAAc,OAAKA,MAwC3BJ,UAAWG,IACT,oBACA,CACE,YAA2B,IAAfpB,IANlB,sBAaED,IAAaJ,EAASc,OAAuB,IAAfT,IAC9B,wBACEkB,KAAK,SACLC,QAlDV,WACEJ,EAAYpB,EAASc,MACrBO,GAAc,IAiDNC,UAAU,4BAHZ,sBAUJ,6BACGpB,EAAkBD,EAAiB,CAAEG,WAAUC,eAC7CsB,KAAI,SAAAC,GAAI,OACP,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCpIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.04f8cbee.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((item1, item2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return item1.length - item2.length;\n\n      case SortType.ALPHABET:\n        return item1.localeCompare(item2);\n\n      default:\n        return SortType.NONE;\n    }\n  });\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const [isReversed, setIsReversed] = useState(false);\n\n  function sortAlphabetically() {\n    setSortType(SortType.ALPHABET);\n  }\n\n  function sortLength() {\n    setSortType(SortType.LENGTH);\n  }\n\n  function reversing() {\n    setIsReversed(previsReversed => !previsReversed);\n  }\n\n  function resetting() {\n    setSortType(SortType.NONE);\n    setIsReversed(false);\n  }\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          onClick={sortAlphabetically}\n          className={classNames(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={sortLength}\n          className={classNames(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={reversing}\n          className={classNames(\n            'button is-warning',\n            {\n              'is-light': isReversed === false,\n            },\n          )}\n        >\n          Reverse\n        </button>\n\n        {(sortType !== SortType.NONE || isReversed === true) && (\n          <button\n            type=\"button\"\n            onClick={resetting}\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {getReorderedGoods(goodsFromServer, { sortType, isReversed })\n          .map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}